坏代码的味道：
    1.重复代码
    2.过长函数
        不熟悉面对对象的人，常常觉得对象程序中只有无穷无尽的委托，根本没有进行任何计算。
        但是换个思维，正是因为核心封装复用非常良好。所以看起来是无穷的调用栈，其实是由
        一个核心技术或者思想生长出来的树。
        每当感觉需要注释说明什么，就可以尝试分解，用方法名说明这一段的功能
    3.过大的类
        类似过长函数
    4.过长的参数列
    5.某个类或者函数常常变化
    6.某个变化必须通过修改几个类
    7.某个类的方法大量依赖别的对象或者类的数据
    8.不同类总是有同一个字段
    9.基本类型偏执。。总是喜欢用基本类型来定义字段,事实永远是类更有扩展性，比如货币（数值，币种，汇率），电话（区号，类型，数值）等
    10.面对对象的一个明显特征就是：少用switch语句。本质上。switch语句的问题在于重复。你会返现switch语句散布于不同地点。每次新增一些
        东西。就要所有的switch都要修改。
        switch 和 大量if 都最好用多态来替代。
    11.平行继承。有时候发现当写一个子类就不得不写多个子类。
    12.添加了一些看似能用到。实际用不到的类的函数。也可以叫夸夸其谈的未来性。
    13.过长的无用调用，A需要E对象，先请求B再请求C在请求D最后请求到E。试着用方法直接请求E。如果用步到BCD的话
    14.别扭的继承。。拒绝超类的函数和数据
    15.