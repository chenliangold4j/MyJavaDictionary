最常碰到的三个性能需求:
    1.如何确认服务器是否达到性能最佳状态,
    2.找出某条语句慢 的原因
    3.诊断间歇性故障
1.简介:
    定义:性能既响应时间.假设性能优化就是再一定的工作负载下尽可能多的降低响应时间
    无法测量就无法优化.第一步往往是测量时间花在什么地方.90%的时间用于测量.而且要小心测量本身的不准确
2.通过性能刨析进行优化
    两个步骤:测量时间 ,对结果进行统计和排序.
    两种类型的性能剖析:基于执行时间的分析和基于等待的分析.
        1.基于执行时间的分析研究的是什么任务的执行时间最长.
        2.基于等待的分析是判断任务在什么地方被阻塞的时间最长
    这里又很多工具可以学习并使用

3.剖析mysql查询
    1.服务器负载剖析:
        服务端可以有效的审计坏查询.
        1.捕获mysql的查询到日志文件中. mysql又long_query_time设置慢查询时间,之后慢查询日志会记录
        2.分析查询日志.使用工具pt-query-digest分析慢查询日志.
    2.剖析单挑查询.
        1.使用show profile,这里需要想开启profile.开启后,查询的性能数据会记录到一张表.详情看第三版 118页.里面还可以查询每一步的时间.
        2.使用show  status.这个是查询计数的.
        3.使用慢查询日志.
        4.使用perfomance schema
    3.使用性能剖析
4.诊断间歇性问题
    如果没有合适的工具的方法,靠尝试更改使得问题得到解决就遥遥无期
    1.单条查询问题还是服务器问题
    2.使用show global status  示例每秒运行并从中找到查询数量飙升,之后再定位问题
    3.show processlist 观察线程是否处理不正常的状态或者有其他不正常的特征.
    4.使用查询日志
        找到查询日志.之后用工具分析
    5.理解发现的问题
        用图更好理解一些.
        作者建议先使用 show status 和 show processlist.记录信息.这两种方法开销很低.
    6.捕获诊断数据
        就是不停的监控,然后看到线程,或者查询,负载的飙升或者时间过长.可以通过脚本来完成
        注明: 每秒查询率（QPS，Queries-per-second）
5.诊断案例:原书98.pdf 134 很好的一个案例

总结.手上能测量出数据才能定位问题..mysql的和系统的监控同等重要.