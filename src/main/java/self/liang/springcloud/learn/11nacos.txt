1.Nacos  naming configuration service
    服务发现，配置管理和服务管理平台。
    等价于eureka config bus
    CAP 中的AP

2.自带ribbon

3.nacos支持AP CP 两种模式。
        全局开关 curl -X PUT '$NACOS_SERVER:8848/nacos/v1/ns/operator/switches?entry=serverMode&value=CP'

4.nacos配置规则
    ${spring.application.name}-${spring.profile.active}.${spring.cloud.nacos.config.file.extension}、
    https://nacos.io/zh-cn/docs/quick-start-spring-cloud.html

    通过这个规则从配置中心拿配置文件。可以使用bootstrap.yml配置本地配置，从中心拿动态配置。

5.多环境多项目管理：
    DataID
    group

    namespace + group + data id 三者来定位配置文件。
    namespace ：区分部署环境
    group 和 data id 逻辑上区分两个对象。

    默认namespace public
        group default_group
        cluster default


    namespace 之间是隔离的。 三个环境：开发，测试，生产，我们就可以创建3个namespace 来隔离
    group 可以把不同微服务划分同一个分组里面。

        service就是微服务，一个service可以包含多个集群，nacos的默认cluster 是default，cluster是对指定微服务的一个虚拟划分。
        比方说为了容灾，将service分别部署了两个机房，这是可以给机房分别取名，还可以让同机房互相调用提升性能。

        最后instance 就是实例

6.持久化以及集群。
    由nginx路由到nacos实例，然后用mysql统一存储配置文件
    https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html 有数据库文件以及nacos配置文件。

    1.数据库从derby切换到mysql
       1）  https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html 下载sql文件，导入数据库。
       2）