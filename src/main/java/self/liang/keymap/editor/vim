1. 命令vimtutor zh 看中文官方教程

2. hjkl 上下左右

3.  x 删除字符

4. a和i一样都是插入模式，a会在当前字符的结尾插入，i是之前


删除类  d(delete)
5 dw 可以从光标处删除至一个单词的末尾
6 d$ 一直删除到行尾
7 de  和dw不一样的是，不包括空格
8 d 数字 motion(操作)   d2w（删除两个单词） 等等
9 dd 删除当前行  2dd 删除两行

移动  w(word)
1. 在动作前输入数字会使得它重复多次
2. 2w 使光标移动两个单词
3. 3e 使光标移动到第三个单词的末尾
4. 0 数字移动到行首
5. b 向前移动一个单词

撤销
1. u 撤销执行的命令
2  U （大写）撤销对整行的修改
3  ctrl  R  （先按ctrl 不松开 ，接着按R键） 这样就可以重做被撤销的命令。撤销掉撤销
4

置入类
1. 输入p键最后一次删除的内容置入光标之后
2.

替换类
1. 按r 然后输入需要替换的字符

更改类
1. 改变闻到到一个单词的末尾，ce ***
2. c [number] motion 和 d类似  也可以w $ 修改单词或者整句

定位以及文件状态
1. ctrl g 显示当前编辑文件中当前光标所在行位置以及文件状态信息
2. 输入大写G 直接跳转到文件中的某一行  直接输入G 跳最后  【number】 G 跳到number行   【number】 gg 也一样
3.ctrl o ctrl i 跳转到上一次编辑处

搜索类
1. /【str】
2.  再此按下 n 下一个   N 上一个
3.  ctrl（按住） o 回到之前位置   ctrl i 相反

配对括号查找
输入 % 查找配对的括号 )}]

替换
1. 输入 :s/old/new/g 可以替换old为new    /g是全行，不加的话，替换第一个匹配的单词
2  如果是 #，#s/old/new/g 其中 #，# 代表若干行中首位的行号
3  %s/old/new/g 全文件
4  %s/old/new/gc 全文件，并对每个匹配串都提示是否进行替换

vim内执行外部命令的方法
1.输入 ：! 然后输入外部命令   列入 :!ls

保存
1. w
2. w  Test 保存为Test
3. v motion :w filename ** 保存部分内容    这里注意 v快捷键
4. v 选择之后还可以按d删除

提取和合并
1.:r filename ** 向当前文件写入另外文件的内容
2 :r !ls 将ls的内容写入

打开类
1. 输入o进入插入模式，大写O是在上面
2. a 在光标之后插入
3 y复制文本 p 粘贴文本
4 yy 复制一行  p

设置可以使查找和替换忽略的大小写的选项
1. set ic 设置查找忽略大小写
2. set hls is 高亮上次搜索的词   nohlsearch 移除匹配高亮   incsearch 查找短语时显示部分匹配
3. set noic 不忽略大小写
4 /word/\c 一次忽略大小写

获取  :help可以打开帮助窗口
1. ctrl w w 可以在窗口间跳转
2. help w  help c_CTRL-D   help insert-index help user-manual 可以看到各个模式或者功能的帮助

创建启动脚本
1. vimrc 文件
    vim ~/.vimrc
2. 读取示例文件的内容:
    :r $VIMRUNTIME/vimrc_example.vim
3. ：wq
更多信息请输入 :help vimrc-intro


补全
1. 使用 ctrl d 和 tab 可以进行命令补全
2. set nocp 该命令指定让 Vim 工作在不兼容模式下。 在 Vim 之前， 出现过一个非常流行的编辑器叫
            vi。 Vim 许多操作与 vi 很相似， 但也有许多操作与 vi 是不一样的。 如果使用“:set
            cp”命令打开了兼容模式开关的话， Vim 将尽可能地模仿 vi 的操作模式。
3. ctrl d 会显示可以提示的项， tab会自动补全
