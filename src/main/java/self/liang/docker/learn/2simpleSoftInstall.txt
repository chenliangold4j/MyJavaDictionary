第三章,软件安装的简化
    软件安装分3步:
        1.我该如何选择所需的软件,2.我去哪找,3.安装了什么,以及如何隔离.


        1) 选择所需的软件
            1)仓库
                quay.io/dockerinaction/ch3_hello_registry
                仓库主机     用户名        容器短名
                仓库是一个有名字的镜像桶,名字类似url.
            2)标签
                既尾巴上的版本好  mysql:5.7.28
        2)查找和安装
            1)查找:docker hub
            可以用命令行在docker hub上搜索仓库.
            镜像作者可以公开自己的镜像.

            查找命令:docker search mysql
            其中AUTOMATED 有[ok]标签的话,就是用公开的脚本构建的.

            2)可以用网站找,直接搜即可
            3)使用替代注册服务器.
                例如: docker pull quay.io/dockerinaction/ch3_hello_registry:latest
                直接到quay.io去找.
            4)镜像文件
               为了演示方便，我们需要先保存一个镜像文件
               docker pull busybox
               docker save -o my-busybox.tar busybox
               docker rmi busybox

               加载镜像文件
               docker load -i my-busybox.tar  / 如果不使用 -i 参数，docker会使用标准输入流，而不是从文件读取。

                使用dockerfile
                git clone https://github.com/dockerinaction/ch3_dockerfile.git
                docker build -t dia_ch3/dockerfile ch3_dockerfile
                # 删除
                docker rmi dia_ch3/dockerfile
                rm -rf ch3_dockerfile
        3)安装文件和隔离
            一些复杂的问题：
                什么样的镜像因素会影响下载和安装速度
                docker images 列出了哪些未命名的镜像
                dicker pull 为什么包含 相关依赖的下载消息
                我写入容器文件系统中的文件放在哪

                1）镜像层：
                    镜像层次就是镜像依赖的其他镜像，如果已经下载，那么就跳过。
                    docker pull dockerinaction/ch3_myapp
                    docker pull dockerinaction/ch3_myotherapp

                    都依赖java6，这样第二个就快
                    docker images显示安装的镜像

                    docker rmi 删除镜像

                2）分层关系：
                    镜像维护者父子关系。
                    容器中的文件是镜像创建容器的所有层集合。
                3）容器文件隔离和抽象：
                    容器中运行的程序对镜像分层一无所知。
                    Union文件系统：
                        Union文件系统是创建有效文件隔离极为关键的工具。其他工具还有MNT命名空间和chroot系统调用。
                        该文件系统在你的主机系统上创建挂载点，对分层使用进行了封装。所创建的分层都捆绑到docker镜像层。
                        linux内核提供了MNT系统命名空间，当docker创建一个容器时，这个新的容器会有自己的MNT命名空间，以及为镜像创建新的挂载点。
                        最后chroot通过容器上下文构建镜像的根文件系统。这可以防止运行于容器内的任何程序和主机其他部分有所关联。
                4）






